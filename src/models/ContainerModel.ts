import { ContainerSubscriptionModel } from "./ContainerSubscriptionModel";
import { ContainerZoneOptionModel } from "./ContainerZoneOptionModel";
import { OptionModel } from "./OptionModel";
import { WarningModel } from "./WarningModel";

export interface ContainerModel {
  warnings: WarningModel[];
  status: OptionModel;
  zone: ContainerZoneOptionModel;
  adblockBypassDisabledAt: string;
  analyticsEnabledAt: string;
  createdAt: string;
  defaultEmailAlert: boolean;
  icon: string;
  id: number;
  identifier: string;
  limitCpu: string;
  limitMemory: string;
  maxReplicaCount: number;
  minReplicaCount: number;
  name: string;
  notDelete: boolean;
  notDeploy: boolean;
  notDisableAutomatically: boolean;
  notDisableBySmallUsage: boolean;
  requestCpu: string;
  requestMemory: string;
  requestsLimit: number;
  sGtmContainerId: string;
  subscription: ContainerSubscriptionModel;
  todayUsage: number;
  updatedAt: string;
  anonymizeAvailable: boolean;
  cookieKeeperOptions: {
    standard: Record<string, boolean>;
    custom: Array<{ name: string; t: number }>;
  };
  anonymizeOptions: Record<string, string>;
  anonymizerEnabled: boolean;
  botHeaders: boolean;
  botIndexEnabled: boolean;
  changePlanAvailable: boolean;
  code: string;
  apiKey: string;
  cookieKeeperEnabled: boolean;
  customLoaderEnabled: boolean;
  debugMode: boolean;
  delayEnabled: boolean;
  fileProxyEnabled: boolean;
  geoHeaders: boolean;
  previewHeader: string;
  previewHeaderEnabled: boolean;
  productSource: string;
  scheduleEnabled: boolean;
  serviceAccountCredentials: string;
  serviceAccountEnabled: boolean;
  stapeDomain: string;
  stapeUserIdHeaderEnabled: boolean;
  storageEnabled: boolean;
  storeLimitPaid: number;
  userAgentHeaders: boolean;
  userIdentifier: string;
  xmlToJsonEnabled: boolean;
}
